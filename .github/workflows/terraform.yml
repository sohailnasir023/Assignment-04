name: "Terraform"

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Trigger resource destruction'
        required: true

jobs:
  terraform:
    name: "terraform"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_SECRET_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup terraform config
        uses: hashicorp/setup-terraform@v2

      - name: terraform formatting
        id: fmt
        run: terraform fmt -check 

      - name: terraform init
        id: init
        run: terraform init

      - name: terraform plan
        id: plan
        run: terraform plan

      - name: terraform apply
        id: approve
        run: terraform apply -auto-approve

  destroy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_SECRET_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_ACCESS_KEY }}

      - name: Download state file from S3
        run: |
          aws s3 cp s3://assignment04-sohail-tfstate-file-bucket/statefilefolder/terraform.tfstate ./terraform.tfstate --debug

      - name: Preserve state file as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: terraform-state
          path: ./terraform.tfstate

      - name: terraform destroy
        run: terraform destroy -auto-approve
